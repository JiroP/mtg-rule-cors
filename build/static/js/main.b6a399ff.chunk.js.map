{"version":3,"sources":["RulesContext.ts","utils/parseRules.ts","components/ChapterLink.tsx","constants/colors.ts","components/SectionComponent.tsx","components/TableOfContents.tsx","components/SearchBar.tsx","components/SearchView.tsx","components/RuleComponent.tsx","components/Rules.tsx","components/ChapterPage.tsx","App.tsx","components/ScrollToTop.tsx","index.tsx"],"names":["RulesContext","createContext","rulesArray","rulesDict","parseRulesToObject","data","getLineType","line","RegExp","test","isSection","isChapter","isRule","lines","replace","split","rulesStartIndex","findIndex","glossaryStartIndex","slice","forEach","rule","title","type","ruleDigits","length","getSectionKey","getChapterKey","getRuleKey","digits","sKey","chapters","cKey","rules","rKey","subRules","sRKey","insertRuleToRulesObject","useStyles","makeStyles","chapter","color","marginLeft","ChapterLink","id","sectionId","classes","to","Typography","className","COLORS","theme","section","marginTop","spacing","marginBottom","chapterRoot","background","borderRadius","SectionComponent","chaptersArray","Object","entries","sort","a","b","localeCompare","map","chapterId","TableOfContents","search","position","shape","backgroundColor","alpha","palette","common","white","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","handleSearch","useState","value","setValue","onSubmit","event","preventDefault","InputBase","placeholder","root","input","inputProps","onChange","target","rulesRoot","SearchView","useLocation","useContext","URLSearchParams","get","variant","filter","toLowerCase","includes","subRule","RuleComponent","values","notFoundHeader","Rules","chapterHeader","paddingTop","paddingBottom","sectionHeader","ChapterPage","useParams","sectionTitle","chapterTitle","container","appBar","homeButton","marginRight","App","useMemo","createTheme","history","useHistory","rulesDictionary","setRulesDictionary","setRules","useEffect","axios","resp","fetchRules","ThemeProvider","CssBaseline","AppBar","Toolbar","Button","text","push","Container","Provider","path","exact","withRouter","unlisten","listen","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6a399ff.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { RuleContents } from './types';\n\nconst RulesContext = createContext<RuleContents>({\n  rulesArray: [],\n  rulesDict: {},\n});\n\nexport default RulesContext;\n","/* eslint-disable no-useless-escape */\nimport { RuleContents, RulesDict, RuleType } from '../types';\n\nconst parseRulesToObject = (data: string): RuleContents => {\n  const rulesDict: RulesDict = {};\n\n  const isSection = (line: string): boolean => (\n    new RegExp('^\\\\d[.] ').test(line)\n  );\n\n  const isChapter = (line: string): boolean => (\n    new RegExp('^\\\\d{3}[.] ').test(line)\n  );\n\n  const isRule = (line: string): boolean => (\n    new RegExp('^\\\\d{3}[.]\\\\d{1,3}[.] ').test(line)\n  );\n\n  const getLineType = (line: string): RuleType => {\n    if (isSection(line)) return 'section';\n    if (isChapter(line)) return 'chapter';\n    if (isRule(line)) return 'rule';\n    return 'subRule';\n  };\n\n  const insertRuleToRulesObject = (title: string, type: RuleType): void => {\n    const ruleDigits = (line: string): number => (\n      line.slice(4, 7).replace(/\\D/g, '').length\n    );\n\n    const getSectionKey = (line: string): string => line[0];\n\n    const getChapterKey = (line: string): string => line.slice(1, 3);\n\n    const getRuleKey = (line: string): string => {\n      const digits = ruleDigits(line);\n\n      return line.slice(4, 4 + digits);\n    };\n\n    const getSubRuleKey = (line: string): string => {\n      const digits = ruleDigits(line);\n\n      return line[4 + digits];\n    };\n\n    switch (type) {\n      case 'section': {\n        const sKey = getSectionKey(title);\n\n        rulesDict[sKey] = { title, chapters: {} };\n        break;\n      }\n      case 'chapter': {\n        const sKey = getSectionKey(title);\n        const cKey = getChapterKey(title);\n\n        rulesDict[sKey]\n          .chapters[cKey] = {\n            title, rules: {},\n          };\n        break;\n      }\n      case 'rule': {\n        const sKey = getSectionKey(title);\n        const cKey = getChapterKey(title);\n        const rKey = getRuleKey(title);\n\n        rulesDict[sKey]\n          .chapters[cKey]\n          .rules[rKey] = {\n            title,\n            subRules: {},\n          };\n        break;\n      }\n      case 'subRule': {\n        const sKey = getSectionKey(title);\n        const cKey = getChapterKey(title);\n        const rKey = getRuleKey(title);\n        const sRKey = getSubRuleKey(title);\n\n        rulesDict[sKey]\n          .chapters[cKey]\n          .rules[rKey]\n          .subRules[sRKey] = {\n            title,\n          };\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  // Groups paragraphs between empty lines or empty line with space\n  const lines = data.replace(/\\r\\n/g, '\\n')\n    .split(/\\n{2,}|\\n \\n/g);\n\n  const rulesStartIndex = lines.findIndex((line) => line === 'Credits') + 1;\n  const glossaryStartIndex = lines\n    .slice(rulesStartIndex)\n    .findIndex((line) => line === 'Glossary');\n\n  const rulesArray = lines.slice(\n    rulesStartIndex,\n    rulesStartIndex + glossaryStartIndex,\n  );\n\n  rulesArray.forEach((rule) => {\n    const type = getLineType(rule);\n    insertRuleToRulesObject(rule, type);\n  });\n\n  return { rulesDict, rulesArray };\n};\n\nexport default parseRulesToObject;\n","import React, { ReactElement } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport { Chapter } from '../types';\n\ninterface ChapterProps extends Chapter {\n  id: string;\n  sectionId: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  chapter: {\n    // background: COLORS[600],\n    color: 'white',\n    marginLeft: '10px',\n  },\n}));\n\nconst ChapterLink: React.FC<ChapterProps> = ({\n  title,\n  id,\n  sectionId,\n}): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Link to={`/${sectionId}/${id}`}>\n        <Typography className={classes.chapter}>{title}</Typography>\n      </Link>\n    </>\n  );\n};\n\nexport default ChapterLink;\n","export const COLORS = {\n  900: '#1F2933',\n  800: '#323F4B',\n  700: '#3E4C59',\n  600: '#52606D',\n  500: '#616E7C',\n  400: '#7B8794',\n  300: '#9AA5B1',\n  200: '#CBD2D9',\n  100: '#E4E7EB',\n  50: '#F5F7FA',\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChapterLink from './ChapterLink';\nimport { Section } from '../types';\nimport { COLORS } from '../constants/colors';\n\ninterface SectionProps extends Section {\n  id: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  section: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: 'white',\n  },\n  chapterRoot: {\n    background: COLORS[600],\n    borderRadius: '10px',\n  },\n}));\n\nconst SectionComponent: React.FC<SectionProps> = ({\n  chapters,\n  title,\n  id,\n}) => {\n  const classes = useStyles();\n\n  // For some reason entries was messing up insert order so we sort it\n  const chaptersArray = Object.entries(chapters).sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <>\n      <Typography className={classes.section}>{title}</Typography>\n      <div className={classes.chapterRoot}>\n        {chaptersArray.map(([chapterId, chapter]) => (\n          <ChapterLink\n            key={`chapter-${chapter.title}`}\n            id={chapterId}\n            sectionId={id}\n            rules={chapter.rules}\n            title={chapter.title}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SectionComponent;\n","import React, { ReactElement } from 'react';\n\nimport SectionComponent from './SectionComponent';\nimport { RuleContents } from '../types';\n\nconst TableOfContents: React.FC<RuleContents> = ({\n  rulesArray,\n  rulesDict,\n}): ReactElement | null => {\n  if (!rulesArray.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {Object.entries(rulesDict).map(([id, { title, chapters }]) => (\n        <SectionComponent\n          key={`Section-${title}`}\n          id={id}\n          title={title}\n          chapters={chapters}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default TableOfContents;\n","import React, { ReactElement, useState } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst SearchBar: React.FC<{handleSearch: (text: string) => void}> = ({ handleSearch })\n  : ReactElement => {\n  const classes = useStyles();\n\n  const [value, setValue] = useState('');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n    handleSearch(value);\n    setValue('');\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ 'aria-label': 'search' }}\n          onChange={handleChange}\n          value={value}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { ReactElement, useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useLocation } from 'react-router-dom';\n\nimport RulesContext from '../RulesContext';\nimport { COLORS } from '../constants/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  rulesRoot: {\n    background: COLORS[500],\n    borderRadius: '10px',\n    marginBottom: theme.spacing(2),\n  },\n  rule: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\nconst SearchView: React.FC = (): ReactElement => {\n  const classes = useStyles();\n\n  const { search } = useLocation();\n  const { rulesArray } = useContext(RulesContext);\n\n  const params = new URLSearchParams(search);\n  const value = params.get('value');\n\n  return (\n    <>\n      <Typography variant=\"h4\">\n        Search results for &apos;\n        {value}\n        &apos;:\n      </Typography>\n      <div className={classes.rulesRoot}>\n        {value\n          ? rulesArray\n            .filter((rule) => rule.toLowerCase().includes(value.toLowerCase()))\n            .map((rule) => (\n              <Typography key={`search-${rule}`} className={classes.rule}>\n                {rule}\n              </Typography>\n            ))\n          : null}\n      </div>\n    </>\n  );\n};\n\nexport default SearchView;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Rule } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  rule: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  subRule: {\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst RuleComponent: React.FC<Rule> = ({ subRules, title }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography className={classes.rule}>{title}</Typography>\n      {Object.values(subRules).map((subRule) => (\n        <Typography key={`subrule${subRule.title}`} className={classes.subRule}>\n          {subRule.title}\n        </Typography>\n      ))}\n    </>\n  );\n};\n\nexport default RuleComponent;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport RuleComponent from './RuleComponent';\nimport { Rule } from '../types';\nimport { COLORS } from '../constants/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: COLORS[500],\n    borderRadius: '10px',\n    marginBottom: theme.spacing(2),\n  },\n  notFoundHeader: {\n    color: 'white',\n  },\n}));\n\nconst Rules: React.FC<{ rules: { [key: string]: Rule } }> = ({\n  rules,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {rules ? (\n        Object.values(rules).map(({ subRules, title }) => (\n          <RuleComponent\n            key={`rule-container-${title}`}\n            subRules={subRules}\n            title={title}\n          />\n        ))\n      ) : (\n        <Typography className={classes.notFoundHeader} variant=\"h2\">\n          Rules not found for the chapter. :(\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Rules;\n","import React, { ReactElement, useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router';\n\nimport RulesContext from '../RulesContext';\nimport Rules from './Rules';\n\ninterface ChapterParams {\n  chapterId: string;\n  sectionId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  chapterHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    color: 'white',\n  },\n  sectionHeader: {\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    color: 'white',\n  },\n}));\n\nconst ChapterPage: React.FC = (): ReactElement => {\n  const classes = useStyles();\n\n  const { rulesDict } = useContext(RulesContext);\n  const { chapterId, sectionId } = useParams<ChapterParams>();\n\n  const { title: sectionTitle, chapters } = rulesDict[sectionId];\n  const { title: chapterTitle, rules } = chapters?.[chapterId];\n\n  return (\n    <>\n      <Typography className={classes.sectionHeader} variant=\"h4\">\n        {sectionTitle}\n      </Typography>\n      <Typography className={classes.chapterHeader} variant=\"h5\">\n        {chapterTitle}\n      </Typography>\n      <Rules rules={rules} />\n    </>\n  );\n};\n\nexport default ChapterPage;\n","import React, {\n  ReactElement, useEffect, useMemo, useState,\n} from 'react';\nimport {\n  AppBar,\n  Button,\n  Container,\n  CssBaseline,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport {\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport {\n  Link, Route, Switch, useHistory,\n} from 'react-router-dom';\nimport axios from 'axios';\n\nimport RulesContext from './RulesContext';\nimport parseRulesToObject from './utils/parseRules';\nimport TableOfContents from './components/TableOfContents';\nimport SearchBar from './components/SearchBar';\nimport SearchView from './components/SearchView';\nimport ChapterPage from './components/ChapterPage';\nimport { RulesDict } from './types';\nimport { COLORS } from './constants/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    background: COLORS[800],\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    borderRadius: '10px',\n  },\n  appBar: {\n    background: COLORS[500],\n  },\n  homeButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {},\n}));\n\nconst App: React.FC = (): ReactElement | null => {\n  const classes = useStyles();\n\n  const theme = useMemo(\n    () => createTheme({\n      palette: { type: 'dark' },\n    }),\n    [],\n  );\n\n  const history = useHistory();\n\n  const [rulesDictionary, setRulesDictionary] = useState<RulesDict>({});\n  const [rules, setRules] = useState<string[]>([]);\n\n  const handleSearch = (text: string): void => {\n    if (text) {\n      history.push(`/search?value=${text}`);\n    }\n  };\n\n  useEffect(() => {\n    const fetchRules: () => Promise<void> = async () => {\n      try {\n        const resp = await axios.get('/api/mtg');\n        const { rulesArray, rulesDict } = parseRulesToObject(resp.data);\n        setRulesDictionary(rulesDict);\n        setRules(rulesArray);\n      } catch (error) {\n        // console.error('Error getting rules');\n        // console.error(error);\n      }\n    };\n\n    fetchRules();\n  }, []);\n\n  if (!rules.length) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Link to=\"/\">\n              <Button className={classes.homeButton}>Home</Button>\n            </Link>\n            <Typography variant=\"h6\" className={classes.title}>\n              Magic the gathering rules browser\n            </Typography>\n            <SearchBar handleSearch={handleSearch} />\n          </Toolbar>\n        </AppBar>\n        <Toolbar />\n        <Container className={classes.container}>\n          <RulesContext.Provider\n            value={{ rulesArray: rules, rulesDict: rulesDictionary }}\n          >\n            <Switch>\n              <Route path=\"/:sectionId/:chapterId\">\n                <ChapterPage />\n              </Route>\n              <Route path=\"/search\">\n                <SearchView />\n              </Route>\n              <Route exact path=\"/\">\n                <TableOfContents\n                  rulesDict={rulesDictionary}\n                  rulesArray={rules}\n                />\n              </Route>\n            </Switch>\n          </RulesContext.Provider>\n        </Container>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nconst ScrollToTop: React.FC<RouteComponentProps> = ({ history }) => {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n\n  return null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport ScrollToTop from './components/ScrollToTop';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}